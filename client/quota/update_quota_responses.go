// Code generated by go-swagger; DO NOT EDIT.

package quota

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/uempfel/tkgi-client-go/models"
)

// UpdateQuotaReader is a Reader for the UpdateQuota structure.
type UpdateQuotaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateQuotaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateQuotaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewUpdateQuotaAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateQuotaNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateQuotaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateQuotaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateQuotaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateQuotaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateQuotaOK creates a UpdateQuotaOK with default headers values
func NewUpdateQuotaOK() *UpdateQuotaOK {
	return &UpdateQuotaOK{}
}

/* UpdateQuotaOK describes a response with status code 200, with default header values.

OK
*/
type UpdateQuotaOK struct {
	Payload *models.Quota
}

func (o *UpdateQuotaOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/quotas/{owner}][%d] updateQuotaOK  %+v", 200, o.Payload)
}
func (o *UpdateQuotaOK) GetPayload() *models.Quota {
	return o.Payload
}

func (o *UpdateQuotaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Quota)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateQuotaAccepted creates a UpdateQuotaAccepted with default headers values
func NewUpdateQuotaAccepted() *UpdateQuotaAccepted {
	return &UpdateQuotaAccepted{}
}

/* UpdateQuotaAccepted describes a response with status code 202, with default header values.

Quota update
*/
type UpdateQuotaAccepted struct {
	Payload *models.Quota
}

func (o *UpdateQuotaAccepted) Error() string {
	return fmt.Sprintf("[PATCH /v1/quotas/{owner}][%d] updateQuotaAccepted  %+v", 202, o.Payload)
}
func (o *UpdateQuotaAccepted) GetPayload() *models.Quota {
	return o.Payload
}

func (o *UpdateQuotaAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Quota)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateQuotaNoContent creates a UpdateQuotaNoContent with default headers values
func NewUpdateQuotaNoContent() *UpdateQuotaNoContent {
	return &UpdateQuotaNoContent{}
}

/* UpdateQuotaNoContent describes a response with status code 204, with default header values.

No Content
*/
type UpdateQuotaNoContent struct {
}

func (o *UpdateQuotaNoContent) Error() string {
	return fmt.Sprintf("[PATCH /v1/quotas/{owner}][%d] updateQuotaNoContent ", 204)
}

func (o *UpdateQuotaNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateQuotaBadRequest creates a UpdateQuotaBadRequest with default headers values
func NewUpdateQuotaBadRequest() *UpdateQuotaBadRequest {
	return &UpdateQuotaBadRequest{}
}

/* UpdateQuotaBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateQuotaBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *UpdateQuotaBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/quotas/{owner}][%d] updateQuotaBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateQuotaBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateQuotaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateQuotaUnauthorized creates a UpdateQuotaUnauthorized with default headers values
func NewUpdateQuotaUnauthorized() *UpdateQuotaUnauthorized {
	return &UpdateQuotaUnauthorized{}
}

/* UpdateQuotaUnauthorized describes a response with status code 401, with default header values.

Authentication failure. Please check credentials and try again.
*/
type UpdateQuotaUnauthorized struct {
}

func (o *UpdateQuotaUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /v1/quotas/{owner}][%d] updateQuotaUnauthorized ", 401)
}

func (o *UpdateQuotaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateQuotaForbidden creates a UpdateQuotaForbidden with default headers values
func NewUpdateQuotaForbidden() *UpdateQuotaForbidden {
	return &UpdateQuotaForbidden{}
}

/* UpdateQuotaForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateQuotaForbidden struct {
}

func (o *UpdateQuotaForbidden) Error() string {
	return fmt.Sprintf("[PATCH /v1/quotas/{owner}][%d] updateQuotaForbidden ", 403)
}

func (o *UpdateQuotaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateQuotaNotFound creates a UpdateQuotaNotFound with default headers values
func NewUpdateQuotaNotFound() *UpdateQuotaNotFound {
	return &UpdateQuotaNotFound{}
}

/* UpdateQuotaNotFound describes a response with status code 404, with default header values.

Quota not found
*/
type UpdateQuotaNotFound struct {
	Payload *models.ErrorResponse
}

func (o *UpdateQuotaNotFound) Error() string {
	return fmt.Sprintf("[PATCH /v1/quotas/{owner}][%d] updateQuotaNotFound  %+v", 404, o.Payload)
}
func (o *UpdateQuotaNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateQuotaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
