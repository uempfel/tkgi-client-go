// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/uempfel/tkgi-client-go/models"
)

// UpdateClusterReader is a Reader for the UpdateCluster structure.
type UpdateClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewUpdateClusterAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateClusterNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateClusterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateClusterOK creates a UpdateClusterOK with default headers values
func NewUpdateClusterOK() *UpdateClusterOK {
	return &UpdateClusterOK{}
}

/* UpdateClusterOK describes a response with status code 200, with default header values.

OK
*/
type UpdateClusterOK struct {
}

func (o *UpdateClusterOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{clusterName}][%d] updateClusterOK ", 200)
}

func (o *UpdateClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterAccepted creates a UpdateClusterAccepted with default headers values
func NewUpdateClusterAccepted() *UpdateClusterAccepted {
	return &UpdateClusterAccepted{}
}

/* UpdateClusterAccepted describes a response with status code 202, with default header values.

Cluster scale requested
*/
type UpdateClusterAccepted struct {
}

func (o *UpdateClusterAccepted) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{clusterName}][%d] updateClusterAccepted ", 202)
}

func (o *UpdateClusterAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterNoContent creates a UpdateClusterNoContent with default headers values
func NewUpdateClusterNoContent() *UpdateClusterNoContent {
	return &UpdateClusterNoContent{}
}

/* UpdateClusterNoContent describes a response with status code 204, with default header values.

No Content
*/
type UpdateClusterNoContent struct {
}

func (o *UpdateClusterNoContent) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{clusterName}][%d] updateClusterNoContent ", 204)
}

func (o *UpdateClusterNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterBadRequest creates a UpdateClusterBadRequest with default headers values
func NewUpdateClusterBadRequest() *UpdateClusterBadRequest {
	return &UpdateClusterBadRequest{}
}

/* UpdateClusterBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateClusterBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *UpdateClusterBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{clusterName}][%d] updateClusterBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateClusterBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterUnauthorized creates a UpdateClusterUnauthorized with default headers values
func NewUpdateClusterUnauthorized() *UpdateClusterUnauthorized {
	return &UpdateClusterUnauthorized{}
}

/* UpdateClusterUnauthorized describes a response with status code 401, with default header values.

Authentication failure. Please check credentials and try again.
*/
type UpdateClusterUnauthorized struct {
}

func (o *UpdateClusterUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{clusterName}][%d] updateClusterUnauthorized ", 401)
}

func (o *UpdateClusterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterForbidden creates a UpdateClusterForbidden with default headers values
func NewUpdateClusterForbidden() *UpdateClusterForbidden {
	return &UpdateClusterForbidden{}
}

/* UpdateClusterForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateClusterForbidden struct {
}

func (o *UpdateClusterForbidden) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{clusterName}][%d] updateClusterForbidden ", 403)
}

func (o *UpdateClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterNotFound creates a UpdateClusterNotFound with default headers values
func NewUpdateClusterNotFound() *UpdateClusterNotFound {
	return &UpdateClusterNotFound{}
}

/* UpdateClusterNotFound describes a response with status code 404, with default header values.

Cluster not found
*/
type UpdateClusterNotFound struct {
	Payload *models.ErrorResponse
}

func (o *UpdateClusterNotFound) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{clusterName}][%d] updateClusterNotFound  %+v", 404, o.Payload)
}
func (o *UpdateClusterNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
