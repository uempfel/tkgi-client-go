// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetBindingParams creates a new GetBindingParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetBindingParams() *GetBindingParams {
	return &GetBindingParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetBindingParamsWithTimeout creates a new GetBindingParams object
// with the ability to set a timeout on a request.
func NewGetBindingParamsWithTimeout(timeout time.Duration) *GetBindingParams {
	return &GetBindingParams{
		timeout: timeout,
	}
}

// NewGetBindingParamsWithContext creates a new GetBindingParams object
// with the ability to set a context for a request.
func NewGetBindingParamsWithContext(ctx context.Context) *GetBindingParams {
	return &GetBindingParams{
		Context: ctx,
	}
}

// NewGetBindingParamsWithHTTPClient creates a new GetBindingParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetBindingParamsWithHTTPClient(client *http.Client) *GetBindingParams {
	return &GetBindingParams{
		HTTPClient: client,
	}
}

/* GetBindingParams contains all the parameters to send to the API endpoint
   for the get binding operation.

   Typically these are written to a http.Request.
*/
type GetBindingParams struct {

	/* ClusterName.

	   The cluster name
	*/
	ClusterName string

	/* SuppressClusterRoleBinding.

	   set to true in order to get a kubeconfig with no cluster role binding data
	*/
	SuppressClusterRoleBinding *string

	/* UserName.

	   name of user to get kubeconfig for
	*/
	UserName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get binding params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBindingParams) WithDefaults() *GetBindingParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get binding params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBindingParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get binding params
func (o *GetBindingParams) WithTimeout(timeout time.Duration) *GetBindingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get binding params
func (o *GetBindingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get binding params
func (o *GetBindingParams) WithContext(ctx context.Context) *GetBindingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get binding params
func (o *GetBindingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get binding params
func (o *GetBindingParams) WithHTTPClient(client *http.Client) *GetBindingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get binding params
func (o *GetBindingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterName adds the clusterName to the get binding params
func (o *GetBindingParams) WithClusterName(clusterName string) *GetBindingParams {
	o.SetClusterName(clusterName)
	return o
}

// SetClusterName adds the clusterName to the get binding params
func (o *GetBindingParams) SetClusterName(clusterName string) {
	o.ClusterName = clusterName
}

// WithSuppressClusterRoleBinding adds the suppressClusterRoleBinding to the get binding params
func (o *GetBindingParams) WithSuppressClusterRoleBinding(suppressClusterRoleBinding *string) *GetBindingParams {
	o.SetSuppressClusterRoleBinding(suppressClusterRoleBinding)
	return o
}

// SetSuppressClusterRoleBinding adds the suppressClusterRoleBinding to the get binding params
func (o *GetBindingParams) SetSuppressClusterRoleBinding(suppressClusterRoleBinding *string) {
	o.SuppressClusterRoleBinding = suppressClusterRoleBinding
}

// WithUserName adds the userName to the get binding params
func (o *GetBindingParams) WithUserName(userName string) *GetBindingParams {
	o.SetUserName(userName)
	return o
}

// SetUserName adds the userName to the get binding params
func (o *GetBindingParams) SetUserName(userName string) {
	o.UserName = userName
}

// WriteToRequest writes these params to a swagger request
func (o *GetBindingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param clusterName
	if err := r.SetPathParam("clusterName", o.ClusterName); err != nil {
		return err
	}

	if o.SuppressClusterRoleBinding != nil {

		// query param suppressClusterRoleBinding
		var qrSuppressClusterRoleBinding string

		if o.SuppressClusterRoleBinding != nil {
			qrSuppressClusterRoleBinding = *o.SuppressClusterRoleBinding
		}
		qSuppressClusterRoleBinding := qrSuppressClusterRoleBinding
		if qSuppressClusterRoleBinding != "" {

			if err := r.SetQueryParam("suppressClusterRoleBinding", qSuppressClusterRoleBinding); err != nil {
				return err
			}
		}
	}

	// path param userName
	if err := r.SetPathParam("userName", o.UserName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
