// Code generated by go-swagger; DO NOT EDIT.

package basic_error_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ErrorUsingDELETEReader is a Reader for the ErrorUsingDELETE structure.
type ErrorUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ErrorUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewErrorUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewErrorUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewErrorUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewErrorUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewErrorUsingDELETEOK creates a ErrorUsingDELETEOK with default headers values
func NewErrorUsingDELETEOK() *ErrorUsingDELETEOK {
	return &ErrorUsingDELETEOK{}
}

/* ErrorUsingDELETEOK describes a response with status code 200, with default header values.

OK
*/
type ErrorUsingDELETEOK struct {
	Payload map[string]interface{}
}

func (o *ErrorUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /error][%d] errorUsingDELETEOK  %+v", 200, o.Payload)
}
func (o *ErrorUsingDELETEOK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *ErrorUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewErrorUsingDELETENoContent creates a ErrorUsingDELETENoContent with default headers values
func NewErrorUsingDELETENoContent() *ErrorUsingDELETENoContent {
	return &ErrorUsingDELETENoContent{}
}

/* ErrorUsingDELETENoContent describes a response with status code 204, with default header values.

No Content
*/
type ErrorUsingDELETENoContent struct {
}

func (o *ErrorUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /error][%d] errorUsingDELETENoContent ", 204)
}

func (o *ErrorUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewErrorUsingDELETEUnauthorized creates a ErrorUsingDELETEUnauthorized with default headers values
func NewErrorUsingDELETEUnauthorized() *ErrorUsingDELETEUnauthorized {
	return &ErrorUsingDELETEUnauthorized{}
}

/* ErrorUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ErrorUsingDELETEUnauthorized struct {
}

func (o *ErrorUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /error][%d] errorUsingDELETEUnauthorized ", 401)
}

func (o *ErrorUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewErrorUsingDELETEForbidden creates a ErrorUsingDELETEForbidden with default headers values
func NewErrorUsingDELETEForbidden() *ErrorUsingDELETEForbidden {
	return &ErrorUsingDELETEForbidden{}
}

/* ErrorUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ErrorUsingDELETEForbidden struct {
}

func (o *ErrorUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /error][%d] errorUsingDELETEForbidden ", 403)
}

func (o *ErrorUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
