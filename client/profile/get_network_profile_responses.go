// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/uempfel/tkgi-client-go/models"
)

// GetNetworkProfileReader is a Reader for the GetNetworkProfile structure.
type GetNetworkProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetNetworkProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNetworkProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNetworkProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNetworkProfileOK creates a GetNetworkProfileOK with default headers values
func NewGetNetworkProfileOK() *GetNetworkProfileOK {
	return &GetNetworkProfileOK{}
}

/* GetNetworkProfileOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetNetworkProfileOK struct {
	Payload *models.NetworkProfile
}

func (o *GetNetworkProfileOK) Error() string {
	return fmt.Sprintf("[GET /v1/network-profiles/{profileName}][%d] getNetworkProfileOK  %+v", 200, o.Payload)
}
func (o *GetNetworkProfileOK) GetPayload() *models.NetworkProfile {
	return o.Payload
}

func (o *GetNetworkProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkProfileUnauthorized creates a GetNetworkProfileUnauthorized with default headers values
func NewGetNetworkProfileUnauthorized() *GetNetworkProfileUnauthorized {
	return &GetNetworkProfileUnauthorized{}
}

/* GetNetworkProfileUnauthorized describes a response with status code 401, with default header values.

Authentication failure. Please check credentials and try again.
*/
type GetNetworkProfileUnauthorized struct {
}

func (o *GetNetworkProfileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/network-profiles/{profileName}][%d] getNetworkProfileUnauthorized ", 401)
}

func (o *GetNetworkProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNetworkProfileForbidden creates a GetNetworkProfileForbidden with default headers values
func NewGetNetworkProfileForbidden() *GetNetworkProfileForbidden {
	return &GetNetworkProfileForbidden{}
}

/* GetNetworkProfileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetNetworkProfileForbidden struct {
}

func (o *GetNetworkProfileForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/network-profiles/{profileName}][%d] getNetworkProfileForbidden ", 403)
}

func (o *GetNetworkProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNetworkProfileNotFound creates a GetNetworkProfileNotFound with default headers values
func NewGetNetworkProfileNotFound() *GetNetworkProfileNotFound {
	return &GetNetworkProfileNotFound{}
}

/* GetNetworkProfileNotFound describes a response with status code 404, with default header values.

Network profile does not exist
*/
type GetNetworkProfileNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetNetworkProfileNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/network-profiles/{profileName}][%d] getNetworkProfileNotFound  %+v", 404, o.Payload)
}
func (o *GetNetworkProfileNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetNetworkProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
