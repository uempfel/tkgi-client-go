// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/uempfel/tkgi-client-go/client/basic_error_controller"
	"github.com/uempfel/tkgi-client-go/client/cert"
	"github.com/uempfel/tkgi-client-go/client/cluster"
	"github.com/uempfel/tkgi-client-go/client/data_dictionary_controller"
	"github.com/uempfel/tkgi-client-go/client/operation_handler"
	"github.com/uempfel/tkgi-client-go/client/plans"
	"github.com/uempfel/tkgi-client-go/client/profile"
	"github.com/uempfel/tkgi-client-go/client/quota"
	"github.com/uempfel/tkgi-client-go/client/task"
	"github.com/uempfel/tkgi-client-go/client/upgradable"
	"github.com/uempfel/tkgi-client-go/client/usage"
	"github.com/uempfel/tkgi-client-go/client/web_mvc_links_handler"
)

// Default API documentation HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "tkgi.mycorp.com:9021"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new API documentation HTTP client.
func NewHTTPClient(formats strfmt.Registry) *APIDocumentation {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new API documentation HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *APIDocumentation {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new API documentation client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *APIDocumentation {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(APIDocumentation)
	cli.Transport = transport
	cli.BasicErrorController = basic_error_controller.New(transport, formats)
	cli.Cert = cert.New(transport, formats)
	cli.Cluster = cluster.New(transport, formats)
	cli.DataDictionaryController = data_dictionary_controller.New(transport, formats)
	cli.OperationHandler = operation_handler.New(transport, formats)
	cli.Plans = plans.New(transport, formats)
	cli.Profile = profile.New(transport, formats)
	cli.Quota = quota.New(transport, formats)
	cli.Task = task.New(transport, formats)
	cli.Upgradable = upgradable.New(transport, formats)
	cli.Usage = usage.New(transport, formats)
	cli.WebMvcLinksHandler = web_mvc_links_handler.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// APIDocumentation is a client for API documentation
type APIDocumentation struct {
	BasicErrorController basic_error_controller.ClientService

	Cert cert.ClientService

	Cluster cluster.ClientService

	DataDictionaryController data_dictionary_controller.ClientService

	OperationHandler operation_handler.ClientService

	Plans plans.ClientService

	Profile profile.ClientService

	Quota quota.ClientService

	Task task.ClientService

	Upgradable upgradable.ClientService

	Usage usage.ClientService

	WebMvcLinksHandler web_mvc_links_handler.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *APIDocumentation) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.BasicErrorController.SetTransport(transport)
	c.Cert.SetTransport(transport)
	c.Cluster.SetTransport(transport)
	c.DataDictionaryController.SetTransport(transport)
	c.OperationHandler.SetTransport(transport)
	c.Plans.SetTransport(transport)
	c.Profile.SetTransport(transport)
	c.Quota.SetTransport(transport)
	c.Task.SetTransport(transport)
	c.Upgradable.SetTransport(transport)
	c.Usage.SetTransport(transport)
	c.WebMvcLinksHandler.SetTransport(transport)
}
