// Code generated by go-swagger; DO NOT EDIT.

package cert

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/uempfel/tkgi-client-go/models"
)

// ListCertificatesReader is a Reader for the ListCertificates structure.
type ListCertificatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCertificatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListCertificatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListCertificatesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListCertificatesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListCertificatesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListCertificatesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListCertificatesOK creates a ListCertificatesOK with default headers values
func NewListCertificatesOK() *ListCertificatesOK {
	return &ListCertificatesOK{}
}

/* ListCertificatesOK describes a response with status code 200, with default header values.

Cluster certificates
*/
type ListCertificatesOK struct {
	Payload []*models.ClusterCertificate
}

func (o *ListCertificatesOK) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterName}/certificates][%d] listCertificatesOK  %+v", 200, o.Payload)
}
func (o *ListCertificatesOK) GetPayload() []*models.ClusterCertificate {
	return o.Payload
}

func (o *ListCertificatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCertificatesBadRequest creates a ListCertificatesBadRequest with default headers values
func NewListCertificatesBadRequest() *ListCertificatesBadRequest {
	return &ListCertificatesBadRequest{}
}

/* ListCertificatesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ListCertificatesBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ListCertificatesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterName}/certificates][%d] listCertificatesBadRequest  %+v", 400, o.Payload)
}
func (o *ListCertificatesBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListCertificatesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCertificatesUnauthorized creates a ListCertificatesUnauthorized with default headers values
func NewListCertificatesUnauthorized() *ListCertificatesUnauthorized {
	return &ListCertificatesUnauthorized{}
}

/* ListCertificatesUnauthorized describes a response with status code 401, with default header values.

Authentication failure. Please check credentials and try again.
*/
type ListCertificatesUnauthorized struct {
}

func (o *ListCertificatesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterName}/certificates][%d] listCertificatesUnauthorized ", 401)
}

func (o *ListCertificatesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListCertificatesForbidden creates a ListCertificatesForbidden with default headers values
func NewListCertificatesForbidden() *ListCertificatesForbidden {
	return &ListCertificatesForbidden{}
}

/* ListCertificatesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListCertificatesForbidden struct {
}

func (o *ListCertificatesForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterName}/certificates][%d] listCertificatesForbidden ", 403)
}

func (o *ListCertificatesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListCertificatesNotFound creates a ListCertificatesNotFound with default headers values
func NewListCertificatesNotFound() *ListCertificatesNotFound {
	return &ListCertificatesNotFound{}
}

/* ListCertificatesNotFound describes a response with status code 404, with default header values.

Cluster not found
*/
type ListCertificatesNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ListCertificatesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterName}/certificates][%d] listCertificatesNotFound  %+v", 404, o.Payload)
}
func (o *ListCertificatesNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListCertificatesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
