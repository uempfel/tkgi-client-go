// Code generated by go-swagger; DO NOT EDIT.

package cert

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/uempfel/tkgi-client-go/models"
)

// RotateNsxCertsReader is a Reader for the RotateNsxCerts structure.
type RotateNsxCertsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RotateNsxCertsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRotateNsxCertsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRotateNsxCertsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewRotateNsxCertsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRotateNsxCertsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRotateNsxCertsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRotateNsxCertsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRotateNsxCertsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRotateNsxCertsOK creates a RotateNsxCertsOK with default headers values
func NewRotateNsxCertsOK() *RotateNsxCertsOK {
	return &RotateNsxCertsOK{}
}

/* RotateNsxCertsOK describes a response with status code 200, with default header values.

OK
*/
type RotateNsxCertsOK struct {
}

func (o *RotateNsxCertsOK) Error() string {
	return fmt.Sprintf("[PUT /v1/clusters/{clusterName}/rotateNsxCerts][%d] rotateNsxCertsOK ", 200)
}

func (o *RotateNsxCertsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRotateNsxCertsCreated creates a RotateNsxCertsCreated with default headers values
func NewRotateNsxCertsCreated() *RotateNsxCertsCreated {
	return &RotateNsxCertsCreated{}
}

/* RotateNsxCertsCreated describes a response with status code 201, with default header values.

Created
*/
type RotateNsxCertsCreated struct {
}

func (o *RotateNsxCertsCreated) Error() string {
	return fmt.Sprintf("[PUT /v1/clusters/{clusterName}/rotateNsxCerts][%d] rotateNsxCertsCreated ", 201)
}

func (o *RotateNsxCertsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRotateNsxCertsAccepted creates a RotateNsxCertsAccepted with default headers values
func NewRotateNsxCertsAccepted() *RotateNsxCertsAccepted {
	return &RotateNsxCertsAccepted{}
}

/* RotateNsxCertsAccepted describes a response with status code 202, with default header values.

Cluster rotate nsx certs requested
*/
type RotateNsxCertsAccepted struct {
}

func (o *RotateNsxCertsAccepted) Error() string {
	return fmt.Sprintf("[PUT /v1/clusters/{clusterName}/rotateNsxCerts][%d] rotateNsxCertsAccepted ", 202)
}

func (o *RotateNsxCertsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRotateNsxCertsBadRequest creates a RotateNsxCertsBadRequest with default headers values
func NewRotateNsxCertsBadRequest() *RotateNsxCertsBadRequest {
	return &RotateNsxCertsBadRequest{}
}

/* RotateNsxCertsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RotateNsxCertsBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *RotateNsxCertsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/clusters/{clusterName}/rotateNsxCerts][%d] rotateNsxCertsBadRequest  %+v", 400, o.Payload)
}
func (o *RotateNsxCertsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *RotateNsxCertsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRotateNsxCertsUnauthorized creates a RotateNsxCertsUnauthorized with default headers values
func NewRotateNsxCertsUnauthorized() *RotateNsxCertsUnauthorized {
	return &RotateNsxCertsUnauthorized{}
}

/* RotateNsxCertsUnauthorized describes a response with status code 401, with default header values.

Authentication failure. Please check credentials and try again.
*/
type RotateNsxCertsUnauthorized struct {
}

func (o *RotateNsxCertsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/clusters/{clusterName}/rotateNsxCerts][%d] rotateNsxCertsUnauthorized ", 401)
}

func (o *RotateNsxCertsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRotateNsxCertsForbidden creates a RotateNsxCertsForbidden with default headers values
func NewRotateNsxCertsForbidden() *RotateNsxCertsForbidden {
	return &RotateNsxCertsForbidden{}
}

/* RotateNsxCertsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RotateNsxCertsForbidden struct {
}

func (o *RotateNsxCertsForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/clusters/{clusterName}/rotateNsxCerts][%d] rotateNsxCertsForbidden ", 403)
}

func (o *RotateNsxCertsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRotateNsxCertsNotFound creates a RotateNsxCertsNotFound with default headers values
func NewRotateNsxCertsNotFound() *RotateNsxCertsNotFound {
	return &RotateNsxCertsNotFound{}
}

/* RotateNsxCertsNotFound describes a response with status code 404, with default header values.

Cluster not found
*/
type RotateNsxCertsNotFound struct {
	Payload *models.ErrorResponse
}

func (o *RotateNsxCertsNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/clusters/{clusterName}/rotateNsxCerts][%d] rotateNsxCertsNotFound  %+v", 404, o.Payload)
}
func (o *RotateNsxCertsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *RotateNsxCertsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
